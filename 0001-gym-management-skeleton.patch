From 9a0a0c1fbd74c4bdfb82a60c3d30a1b4d54321 Mon Sep 17 00:00:00 2001
From: ChatGPT <chatgpt@example.com>
Date: Sun, 1 Sep 2025 12:00:00 +0530
Subject: [PATCH] Gym Management Skeleton: Laravel API + Vue SPA

---
 .gitignore                                    |  1 +
 gym_api/app/Http/Controllers/AuthController.php | 65 ++++++++++++++++++
 gym_api/app/Http/Middleware/RoleMiddleware.php  | 33 ++++++++
 gym_api/app/Models/User.php                     | 12 +++
 gym_api/database/seeders/RoleSeeder.php         | 21 ++++++
 gym_api/routes/api.php                          | 44 +++++++++++
 gym_api/routes/web.php                          |  7 ++
 resources/js/App.vue                            | 28 +++++++
 resources/js/app.js                             | 12 +++
 resources/js/router.js                          | 45 +++++++++++
 resources/js/Layouts/AppLayout.vue              | 17 ++++
 resources/js/Pages/Login.vue                    | 69 ++++++++++++++++++
 resources/js/Pages/Admin/Dashboard.vue          | 18 ++++
 resources/js/Pages/Admin/Users.vue              | 19 +++++
 resources/js/Pages/Admin/Plans.vue              | 19 +++++
 resources/js/Pages/Trainer/Dashboard.vue        | 14 ++++
 resources/js/Pages/Member/Dashboard.vue         | 14 ++++
 17 files changed, 439 insertions(+)
 create mode 100644 gym_api/app/Http/Controllers/AuthController.php
 create mode 100644 gym_api/app/Http/Middleware/RoleMiddleware.php
 create mode 100644 gym_api/app/Models/User.php
 create mode 100644 gym_api/database/seeders/RoleSeeder.php
 create mode 100644 gym_api/routes/api.php
 create mode 100644 gym_api/routes/web.php
 create mode 100644 resources/js/App.vue
 create mode 100644 resources/js/app.js
 create mode 100644 resources/js/router.js
 create mode 100644 resources/js/Layouts/AppLayout.vue
 create mode 100644 resources/js/Pages/Login.vue
 create mode 100644 resources/js/Pages/Admin/Dashboard.vue
 create mode 100644 resources/js/Pages/Admin/Users.vue
 create mode 100644 resources/js/Pages/Admin/Plans.vue
 create mode 100644 resources/js/Pages/Trainer/Dashboard.vue
 create mode 100644 resources/js/Pages/Member/Dashboard.vue

diff --git a/.gitignore b/.gitignore
index e69de29..8c1f8ab 100644
--- a/.gitignore
+++ b/.gitignore
@@
+node_modules/
+vendor/
+public/build
+.env
+.idea
+.vscode
+package-lock.json
+composer.lock
+
diff --git a/gym_api/app/Http/Controllers/AuthController.php b/gym_api/app/Http/Controllers/AuthController.php
new file mode 100644
--- /dev/null
+++ b/gym_api/app/Http/Controllers/AuthController.php
@@
+<?php
+
+namespace App\Http\Controllers;
+
+use Illuminate\Http\Request;
+use App\Models\User;
+use Illuminate\Support\Facades\Hash;
+
+class AuthController extends Controller
+{
+    public function register(Request $request)
+    {
+        $user = User::create([
+            'name' => $request->name,
+            'email' => $request->email,
+            'password' => Hash::make($request->password),
+        ]);
+
+        $user->assignRole('member');
+        $token = $user->createToken('auth_token')->plainTextToken;
+
+        return response()->json([
+            'status' => 'success',
+            'message' => 'Registration successful',
+            'data' => [
+                'user' => $user,
+                'roles' => $user->getRoleNames(),
+                'token' => $token,
+            ]
+        ]);
+    }
+
+    public function login(Request $request)
+    {
+        $user = User::where('email', $request->email)->first();
+
+        if (!$user || !Hash::check($request->password, $user->password)) {
+            return response()->json(['status' => 'error', 'message' => 'Invalid credentials'], 401);
+        }
+
+        $token = $user->createToken('auth_token')->plainTextToken;
+
+        return response()->json([
+            'status' => 'success',
+            'message' => 'Login successful',
+            'data' => [
+                'user' => $user,
+                'roles' => $user->getRoleNames(),
+                'token' => $token,
+            ]
+        ]);
+    }
+}
diff --git a/gym_api/app/Http/Middleware/RoleMiddleware.php b/gym_api/app/Http/Middleware/RoleMiddleware.php
new file mode 100644
--- /dev/null
+++ b/gym_api/app/Http/Middleware/RoleMiddleware.php
@@
+<?php
+
+namespace App\Http\Middleware;
+
+use Closure;
+use Illuminate\Http\Request;
+
+class RoleMiddleware
+{
+    public function handle(Request $request, Closure $next, ...$roles)
+    {
+        if (! $request->user() || ! $request->user()->hasAnyRole($roles)) {
+            return response()->json(['error' => 'Forbidden'], 403);
+        }
+
+        return $next($request);
+    }
+}
diff --git a/gym_api/app/Models/User.php b/gym_api/app/Models/User.php
new file mode 100644
--- /dev/null
+++ b/gym_api/app/Models/User.php
@@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Foundation\Auth\User as Authenticatable;
+use Illuminate\Notifications\Notifiable;
+use Laravel\Sanctum\HasApiTokens;
+use Spatie\Permission\Traits\HasRoles;
+
+class User extends Authenticatable
+{
+    use HasApiTokens, Notifiable, HasRoles;
+    protected $fillable = ['name','email','password'];
+    protected $hidden = ['password','remember_token'];
+}
diff --git a/gym_api/database/seeders/RoleSeeder.php b/gym_api/database/seeders/RoleSeeder.php
new file mode 100644
--- /dev/null
+++ b/gym_api/database/seeders/RoleSeeder.php
@@
+<?php
+
+namespace Database\Seeders;
+
+use Illuminate\Database\Seeder;
+use Spatie\Permission\Models\Role;
+
+class RoleSeeder extends Seeder
+{
+    public function run(): void
+    {
+        Role::firstOrCreate(['name' => 'admin']);
+        Role::firstOrCreate(['name' => 'trainer']);
+        Role::firstOrCreate(['name' => 'member']);
+    }
+}
diff --git a/gym_api/routes/api.php b/gym_api/routes/api.php
new file mode 100644
--- /dev/null
+++ b/gym_api/routes/api.php
@@
+<?php
+
+use Illuminate\Support\Facades\Route;
+use App\Http\Controllers\AuthController;
+
+Route::post('/auth/register', [AuthController::class, 'register']);
+Route::post('/auth/login', [AuthController::class, 'login']);
+
+Route::middleware(['auth:sanctum'])->group(function () {
+    Route::middleware(['role:admin'])->prefix('admin')->group(function () {
+        Route::get('/dashboard', fn() => response()->json(['msg' => 'Admin dashboard']));
+    });
+    Route::middleware(['role:trainer'])->prefix('trainer')->group(function () {
+        Route::get('/dashboard', fn() => response()->json(['msg' => 'Trainer dashboard']));
+    });
+    Route::middleware(['role:member'])->prefix('member')->group(function () {
+        Route::get('/dashboard', fn() => response()->json(['msg' => 'Member dashboard']));
+    });
+});
diff --git a/gym_api/routes/web.php b/gym_api/routes/web.php
new file mode 100644
--- /dev/null
+++ b/gym_api/routes/web.php
@@
+<?php
+
+use Illuminate\Support\Facades\Route;
+
+Route::get('/{any}', function () {
+    return view('app');
+})->where('any', '.*');
diff --git a/resources/js/App.vue b/resources/js/App.vue
new file mode 100644
--- /dev/null
+++ b/resources/js/App.vue
@@
+<template>
+  <div id="layout">
+    <header class="p-4 bg-gray-800 text-white flex justify-between">
+      <h1 class="font-bold">üèãÔ∏è Gym Management</h1>
+      <nav>
+        <router-link to="/login" class="px-2">Login</router-link>
+        <router-link to="/register" class="px-2">Register</router-link>
+      </nav>
+    </header>
+    <main class="p-6">
+      <router-view />
+    </main>
+  </div>
+</template>
diff --git a/resources/js/app.js b/resources/js/app.js
new file mode 100644
--- /dev/null
+++ b/resources/js/app.js
@@
+import "../css/app.css";
+import { createApp } from "vue";
+import router from "./router";
+import App from "./App.vue";
+
+const app = createApp(App);
+app.use(router);
+app.mount("#app");
diff --git a/resources/js/router.js b/resources/js/router.js
new file mode 100644
--- /dev/null
+++ b/resources/js/router.js
@@
+import { createRouter, createWebHistory } from "vue-router";
+
+import Login from "./Pages/Login.vue";
+import AdminDashboard from "./Pages/Admin/Dashboard.vue";
+import TrainerDashboard from "./Pages/Trainer/Dashboard.vue";
+import MemberDashboard from "./Pages/Member/Dashboard.vue";
+
+const routes = [
+  { path: "/login", component: Login },
+  { path: "/admin", component: AdminDashboard },
+  { path: "/trainer", component: TrainerDashboard },
+  { path: "/member", component: MemberDashboard },
+];
+
+const router = createRouter({
+  history: createWebHistory(),
+  routes,
+});
+
+export default router;
